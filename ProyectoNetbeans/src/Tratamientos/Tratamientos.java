/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Tratamientos;

import BaseDatos.ConexionMySQL;
import Odontograma.Odontograma;
import Paciente.Paciente;
import java.awt.Image;
import java.io.File;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DecimalFormat;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Tom
 */
public class Tratamientos extends javax.swing.JFrame {

    /**
     * Creates new form Tratamientos
     */
    public Tratamientos() {
        initComponents();
        TxtIDTrat.setEnabled(false);        
        jTDescripcion.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTTabla = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLIDPaciente = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLIDDentista = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        TxtIDTrat = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTDescripcion = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(800, 500));
        setMinimumSize(new java.awt.Dimension(800, 500));
        setPreferredSize(new java.awt.Dimension(800, 500));

        jLabel1.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
        jLabel1.setText("Tratamientos");

        jTTabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID Tratamiento", "Duración (sesiones)", "Tratamiento Actual", "Fecha de Inicio"
            }
        ));
        jTTabla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTTablaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTTabla);

        jButton1.setText("Nuevo tratamiento");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Regresar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Finalizar tratamiento");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Odontograma");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLIDPaciente.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLIDPaciente.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLIDPaciente.setText("0");

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel15.setText("ID paciente:");

        jLIDDentista.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLIDDentista.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLIDDentista.setText("0");

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel16.setText("ID Dentista:");

        jLabel2.setText("ID del tratamiento:");

        TxtIDTrat.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        TxtIDTrat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TxtIDTratActionPerformed(evt);
            }
        });

        jTDescripcion.setColumns(20);
        jTDescripcion.setFont(new java.awt.Font("Monospaced", 1, 18)); // NOI18N
        jTDescripcion.setRows(5);
        jScrollPane2.setViewportView(jTDescripcion);

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Descripción del tratamiento");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(76, 76, 76)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(TxtIDTrat, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(61, 61, 61)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(81, 81, 81)
                        .addComponent(jLabel3)
                        .addGap(77, 77, 77))
                    .addComponent(jScrollPane2))
                .addGap(33, 33, 33))
            .addGroup(layout.createSequentialGroup()
                .addGap(96, 96, 96)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(255, 255, 255)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 630, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel16)
                        .addGap(10, 10, 10)
                        .addComponent(jLIDDentista, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(jLIDPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(140, 140, 140))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel16)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLIDDentista)
                                .addComponent(jLabel15))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLIDPaciente)))
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addGap(14, 14, 14)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(TxtIDTrat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(51, 51, 51)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton1)
                                .addGap(17, 17, 17)
                                .addComponent(jButton2))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton3)
                                .addGap(17, 17, 17)
                                .addComponent(jButton4))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(48, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        RegistrarTraramiento RegT = new RegistrarTraramiento();
        RegT.jLIDDentista.setText(jLIDDentista.getText());
        RegT.jLIDPaciente.setText(jLIDPaciente.getText());
        RegT.setLocationRelativeTo(null);
        RegT.setVisible(true);
        this.setVisible(false);    
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        if(TxtIDTrat.getText().length()>0){
           ConexionMySQL mysql = new ConexionMySQL();
            Connection cn= mysql.Conectar();  
            try {
                //String aSQL="UPDATE tratamientos SET finalizado='1' WHERE idTratamiento='"+TxtIDTrat.getText()+"'";
                String aSQL="DELETE FROM tratamientos WHERE idTratamiento='"+TxtIDTrat.getText()+"'";
                
                PreparedStatement pst=cn.prepareStatement(aSQL);
                pst.executeUpdate();
                JOptionPane.showMessageDialog(null, "El tratamiento finalizado");
                TxtIDTrat.setText("");
                jTDescripcion.setText("");
                try {
                    Statement s1 = cn.createStatement();
                    ResultSet rs1 = s1.executeQuery("SELECT idTratamiento,duracion,tratamientoActual,fechaInicio FROM tratamientos WHERE idPaciente = '" + jLIDPaciente.getText() + "' AND finalizado = 0");     
                    ResultSetMetaData rsmd=rs1.getMetaData();        
                    int numeroColumnas=rsmd.getColumnCount();
                    DefaultTableModel modelo=new DefaultTableModel();
                    jTTabla.setModel(modelo);
                    modelo.addColumn("Id Traramiento");
                    modelo.addColumn("Duración (sesiones)");
                    modelo.addColumn("Tratamiento actual");
                    modelo.addColumn("Fecha de inicio");
                    while(rs1.next()){
                        Object [] fila=new Object[numeroColumnas];
                        for(int y=0;y<numeroColumnas;y++){
                        if (((String) rs1.getObject(y+1).toString()).equals("false")){
                            fila [y]="No";
                        }
                        else if (((String) rs1.getObject(y+1).toString()).equals("true")){
                            fila [y]="Sí";
                        }
                        else{
                            fila [y] =(String) rs1.getObject(y+1).toString();                    
                        }
                    }
                    modelo.addRow(fila);
                    }
                    rs1.close();
                }
                catch(SQLException e){
                    JOptionPane.showMessageDialog(null,"Problema al conectar");
                }        
                    }
                    catch(SQLException e){
                        JOptionPane.showMessageDialog(null,"Problema al conectar");
                    } 
                }
        else{
            JOptionPane.showMessageDialog(null, "ningun ID seleccionado");
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
    // TODO add your handling code here:
        ConexionMySQL mysql = new ConexionMySQL();
        Connection cn= mysql.Conectar();
        Odontograma verOdont = new Odontograma();
        try {
            Statement s1 = cn.createStatement();
            ResultSet rs1 = s1.executeQuery("SELECT * FROM odontograma WHERE idOdontograma = '" + jLIDPaciente.getText() + "'");
            while(rs1.next()){ 
                verOdont.JLDiente1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Odontograma/"+rs1.getObject(2).toString()+".png")));
                verOdont.JLDiente2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Odontograma/"+rs1.getObject(3).toString()+".png")));
                verOdont.JLDiente3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Odontograma/"+rs1.getObject(4).toString()+".png")));
                verOdont.JLDiente4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Odontograma/"+rs1.getObject(5).toString()+".png")));
                verOdont.JLDiente5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Odontograma/"+rs1.getObject(6).toString()+".png")));
                verOdont.JLDiente6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Odontograma/"+rs1.getObject(7).toString()+".png")));
                verOdont.JLDiente7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Odontograma/"+rs1.getObject(8).toString()+".png")));
                verOdont.JLDiente8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Odontograma/"+rs1.getObject(9).toString()+".png")));
                verOdont.JLDiente9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Odontograma/"+rs1.getObject(10).toString()+".png")));
                verOdont.JLDiente10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Odontograma/"+rs1.getObject(11).toString()+".png")));       
                verOdont.JLDiente11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Odontograma/"+rs1.getObject(12).toString()+".png")));
                verOdont.JLDiente12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Odontograma/"+rs1.getObject(13).toString()+".png")));
                verOdont.JLDiente13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Odontograma/"+rs1.getObject(14).toString()+".png")));
                verOdont.JLDiente14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Odontograma/"+rs1.getObject(15).toString()+".png")));
                verOdont.JLDiente15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Odontograma/"+rs1.getObject(16).toString()+".png")));
                verOdont.JLDiente16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Odontograma/"+rs1.getObject(17).toString()+".png")));
                verOdont.JLDiente17.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Odontograma/"+rs1.getObject(18).toString()+".png")));
                verOdont.JLDiente18.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Odontograma/"+rs1.getObject(19).toString()+".png")));
                verOdont.JLDiente19.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Odontograma/"+rs1.getObject(20).toString()+".png")));
                verOdont.JLDiente20.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Odontograma/"+rs1.getObject(21).toString()+".png")));       
                verOdont.JLDiente21.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Odontograma/"+rs1.getObject(22).toString()+".png")));
                verOdont.JLDiente22.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Odontograma/"+rs1.getObject(23).toString()+".png")));
                verOdont.JLDiente23.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Odontograma/"+rs1.getObject(24).toString()+".png")));
                verOdont.JLDiente24.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Odontograma/"+rs1.getObject(25).toString()+".png")));
                verOdont.JLDiente25.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Odontograma/"+rs1.getObject(26).toString()+".png")));
                verOdont.JLDiente26.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Odontograma/"+rs1.getObject(27).toString()+".png")));
                verOdont.JLDiente27.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Odontograma/"+rs1.getObject(28).toString()+".png")));
                verOdont.JLDiente28.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Odontograma/"+rs1.getObject(29).toString()+".png")));
                verOdont.JLDiente29.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Odontograma/"+rs1.getObject(30).toString()+".png")));
                verOdont.JLDiente30.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Odontograma/"+rs1.getObject(31).toString()+".png")));       
                verOdont.JLDiente31.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Odontograma/"+rs1.getObject(32).toString()+".png")));
                verOdont.JLDiente32.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Odontograma/"+rs1.getObject(33).toString()+".png")));
                int i;
                for (i=0;i<32;i++){
                    verOdont.problema[i]=Integer.parseInt(rs1.getObject(i+2).toString());
                }
            }            
            rs1.close();
        }
        catch(SQLException e){
            JOptionPane.showMessageDialog(null,"Problema al conectar");
        }
        
        
        verOdont.jLIDDentista.setText(jLIDDentista.getText());    
        verOdont.jLIDPaciente.setText(jLIDPaciente.getText());
        verOdont.setLocationRelativeTo(null);
        verOdont.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jTTablaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTTablaMouseClicked
        // TODO add your handling code here:
        DefaultTableModel modelo = (DefaultTableModel)jTTabla.getModel();
        int fila = jTTabla.rowAtPoint(evt.getPoint());
        int columna = 0;
        ConexionMySQL mysql = new ConexionMySQL();
        Connection cn= mysql.Conectar();  
        if ((fila > -1) && (columna > -1)){
            try {
                Statement s = cn.createStatement();
                ResultSet rs = s.executeQuery("SELECT descripcion FROM tratamientos WHERE idTratamiento = '"+((String) modelo.getValueAt(fila,columna))+"'"); 
                while(rs.next()){
                        jTDescripcion.setText((String) rs.getObject(1).toString());
                    }
                    rs.close();
                }             
            catch(SQLException e){
                JOptionPane.showMessageDialog(null,"Problema al conectar");
            }   
        }
         TxtIDTrat.setText((String) modelo.getValueAt(fila,columna));
    }//GEN-LAST:event_jTTablaMouseClicked

    private void TxtIDTratActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TxtIDTratActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TxtIDTratActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        ConexionMySQL mysql = new ConexionMySQL();
        Connection cn= mysql.Conectar();
        
        boolean i=false;
        try {
            Statement s1 = cn.createStatement();
            ResultSet rs1 = s1.executeQuery("SELECT nombres,apellidos,edad,sexo,domicilio,curp,dentistaAsignado FROM paciente WHERE mostrar = 1 AND idPaciente = '"+jLIDPaciente.getText()+"'"); 
            while(rs1.next()){
                String sFichero = "src\\ImagenesPaciente\\"+jLIDPaciente.getText()+".jpg";
                File fichero = new File(sFichero);
                ImageIcon icon;
                if (fichero.exists())
                {
                  icon=new ImageIcon("src\\ImagenesPaciente\\"+jLIDPaciente.getText()+".jpg");  
                }
                else
                {
                   icon=new ImageIcon("src\\ImagenesPaciente\\SinImagen.png");  
                }
                Image img= icon.getImage();
                Image newimg = img.getScaledInstance(150, 175, java.awt.Image.SCALE_SMOOTH);
                ImageIcon newIcon = new ImageIcon(newimg);
                Paciente verPaciente=new Paciente();
                try {
                    Statement s2 = cn.createStatement();
                    ResultSet rs2 = s2.executeQuery("SELECT fecha,Descripción FROM citas WHERE idPaciente = '"+jLIDPaciente.getText()+"' AND actual='1'"); 
                    while(rs2.next()){
                        verPaciente.jLFecha.setText((String) rs2.getObject(1).toString());
                        verPaciente.jTMotivo.setText((String) rs2.getObject(2).toString());
                    }
                    rs2.close();
                }
                catch(SQLException e){
                    JOptionPane.showMessageDialog(null,"Problema al conectar");
                } 
                // COSTO 
                float cantidadPagada=0;
                float cantidadDebida=0;                
                DecimalFormat df = new DecimalFormat("0.00"); 
                try {
                    Statement s = cn.createStatement();
                    ResultSet rs = s.executeQuery("SELECT cantidadPagada FROM paciente WHERE idPaciente = '"+jLIDPaciente.getText()+"'"); 
                    while(rs.next()){
                        cantidadPagada=Float.parseFloat((String) rs.getObject(1).toString());
                    }
                    rs.close();
                }
                catch(SQLException e){
                    JOptionPane.showMessageDialog(null,"Problema al conectar");
                }           
                try {
                    Statement s = cn.createStatement();
                    ResultSet rs = s.executeQuery("SELECT cantidad FROM costos WHERE idPaciente = '"+jLIDPaciente.getText()+"'"); 
                    while(rs.next()){
                        cantidadDebida+=Float.parseFloat((String) rs.getObject(1).toString());
                    }
                    rs.close();
                }
                catch(SQLException e){
                    JOptionPane.showMessageDialog(null,"Problema al conectar");
                }    
                verPaciente.jLCantidad.setText("$"+df.format(cantidadDebida-cantidadPagada));
                //Aqui acaba costo
                verPaciente.JLNombre1.setText((String) rs1.getObject(1).toString());
                verPaciente.JLApellidos1.setText((String) rs1.getObject(2).toString());
                verPaciente.JLEdad1.setText((String) rs1.getObject(3).toString());
                verPaciente.JSexo1.setText((String) rs1.getObject(4));
                verPaciente.JLDomicilio1.setText((String) rs1.getObject(5).toString());
                verPaciente.JLCurp1.setText((String) rs1.getObject(6).toString());
                verPaciente.jLimagen.setIcon(newIcon);
                verPaciente.jLimagen.setSize(150,175);   
                verPaciente.setLocationRelativeTo(null);
                verPaciente.jLIDDentista.setText((String) rs1.getObject(7).toString());
                verPaciente.jLIDPaciente.setText(jLIDPaciente.getText());
                verPaciente.setTitle("Información de: "+rs1.getObject(1).toString());
                verPaciente.setVisible(true);
                this.setVisible(false);
                i=true;
            }
            if(i==false){
                JOptionPane.showMessageDialog(null,"El paciente no existe o le corresponde a otro doctor");
            }
            rs1.close();
        }
            catch(SQLException e){
		JOptionPane.showMessageDialog(null,"Problema al conectar");
            } 
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Tratamientos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Tratamientos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Tratamientos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Tratamientos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Tratamientos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField TxtIDTrat;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    public javax.swing.JLabel jLIDDentista;
    public javax.swing.JLabel jLIDPaciente;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTDescripcion;
    public javax.swing.JTable jTTabla;
    // End of variables declaration//GEN-END:variables
}
