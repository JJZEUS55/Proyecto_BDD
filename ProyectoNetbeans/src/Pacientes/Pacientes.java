/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Pacientes;

import BaseDatos.ConexionMySQL;
import Inicio.Inicio;
import Paciente.Paciente;
import javax.swing.JOptionPane;
import RegistrarPaciente.RegistrarPaciente;
import java.awt.Image;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.File;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DecimalFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author Tom
 */
public class Pacientes extends javax.swing.JFrame {
  
    /**
     * Creates new form Pacientes
     */
    public Pacientes() {
        initComponents();
        TablaPacientes.addMouseListener(new MouseAdapter() 
   {
       
   });
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        TxtIdPaciente = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        Regresar = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLIDDentista = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        TablaPacientes = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 2, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Lista de pacientes");

        jLabel2.setText("Introduce ID:");

        jButton1.setText("Ver datos");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Eliminar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        Regresar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        Regresar.setText("Regresar");
        Regresar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                RegresarMouseClicked(evt);
            }
        });

        jButton3.setText("Ingresar Nuevo paciente");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel3.setText("ID Dentista:");

        jLIDDentista.setText("0");

        TablaPacientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        TablaPacientes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TablaPacientesMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(TablaPacientes);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(259, 259, 259))
            .addGroup(layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(Regresar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton3)
                .addGap(39, 39, 39))
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLIDDentista))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 402, Short.MAX_VALUE)
                        .addGap(23, 23, 23)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(TxtIdPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jButton1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 109, Short.MAX_VALUE)
                                .addComponent(jButton2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addGap(48, 48, 48))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLIDDentista))
                .addGap(4, 4, 4)
                .addComponent(jLabel1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(115, 115, 115)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(TxtIdPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(34, 34, 34)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(61, 61, 61)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 89, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Regresar)
                    .addComponent(jButton3))
                .addGap(33, 33, 33))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void RegresarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RegresarMouseClicked
        // TODO add your handling code here:
        Inicio regresar=new Inicio();
        regresar.setLocationRelativeTo(null);
        regresar.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_RegresarMouseClicked

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        RegistrarPaciente registrarP=new RegistrarPaciente();
        registrarP.setLocationRelativeTo(null);
        registrarP.setVisible(true);
        registrarP.jLIDDentista.setText(jLIDDentista.getText());
        this.setVisible(false);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        int idPaciente;
        idPaciente=Integer.parseInt(String.valueOf(TxtIdPaciente.getText()));
        int codigo=JOptionPane.showConfirmDialog(null, "¿Seguro que quieres Eliminarlo?"+idPaciente+"", "Mensaje de confirmación", JOptionPane.YES_NO_OPTION, JOptionPane.PLAIN_MESSAGE);
        if (codigo==JOptionPane.YES_OPTION){
            
            ConexionMySQL mysql= new ConexionMySQL();
            Connection cn= mysql.Conectar();
            try {
                PreparedStatement pst=cn.prepareStatement("UPDATE paciente SET mostrar=0 WHERE idPaciente = "+idPaciente+"");            
                 int n =pst.executeUpdate();            
                if (n>0)
                {
                    JOptionPane.showMessageDialog(null,"Paciente eliminado","Mensaje",JOptionPane.INFORMATION_MESSAGE);  
                    try {
                        Statement s = cn.createStatement();
                        ResultSet rs = s.executeQuery("SELECT idPaciente,nombres FROM paciente WHERE dentistaAsignado = '" + jLIDDentista.getText() + "' AND mostrar = 1");     
                        ResultSetMetaData rsmd=rs.getMetaData();        
                        int numeroColumnas=rsmd.getColumnCount();
                        DefaultTableModel modelo=new DefaultTableModel();
                        this.TablaPacientes.setModel(modelo);
                        for(int x=1;x<=numeroColumnas;x++){
                            modelo.addColumn(rsmd.getColumnName(x));
                        }        
                        while(rs.next()){
                            Object [] fila=new Object[numeroColumnas];
                            for(int y=0;y<numeroColumnas;y++){
                                fila [y] =(String) rs.getObject(y+1).toString();
                            }
                            modelo.addRow(fila);
                        }
                        rs.close();
                    }
                            catch(SQLException e){
                                JOptionPane.showMessageDialog(null,"Problema al conectar");
                            }
                } 
                else{
                    JOptionPane.showMessageDialog(null,"Error al borrar datos");
                }
            } 
            catch (SQLException ex) {
                JOptionPane.showMessageDialog(null,ex);
            }
        }
        else if(codigo==JOptionPane.NO_OPTION){
            JOptionPane.showMessageDialog(null,"Paciente no eliminado","Mensaje",JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        ConexionMySQL mysql = new ConexionMySQL();
        Connection cn= mysql.Conectar();
        
        boolean i=false;
        try {
            Statement s1 = cn.createStatement();
            ResultSet rs1 = s1.executeQuery("SELECT nombres,apellidos,edad,sexo,domicilio,curp FROM paciente WHERE dentistaAsignado = '" + jLIDDentista.getText() + "' AND mostrar = 1 AND idPaciente = '"+TxtIdPaciente.getText()+"'"); 
            while(rs1.next()){
                String sFichero = "src\\ImagenesPaciente\\"+TxtIdPaciente.getText()+".jpg";
                File fichero = new File(sFichero);
                ImageIcon icon;
                if (fichero.exists())
                {
                  icon=new ImageIcon("src\\ImagenesPaciente\\"+TxtIdPaciente.getText()+".jpg");  
                }
                else
                {
                   icon=new ImageIcon("src\\ImagenesPaciente\\SinImagen.png");  
                }
                Image img= icon.getImage();
                Image newimg = img.getScaledInstance(150, 175, java.awt.Image.SCALE_SMOOTH);
                ImageIcon newIcon = new ImageIcon(newimg);
                Paciente verPaciente=new Paciente();                
                verPaciente.JLNombre1.setText((String) rs1.getObject(1).toString());
                verPaciente.JLApellidos1.setText((String) rs1.getObject(2).toString());
                verPaciente.JLEdad1.setText((String) rs1.getObject(3).toString());
                verPaciente.JSexo1.setText((String) rs1.getObject(4));
                verPaciente.JLDomicilio1.setText((String) rs1.getObject(5).toString());
                verPaciente.JLCurp1.setText((String) rs1.getObject(6).toString());
                verPaciente.jLimagen.setIcon(newIcon);
                verPaciente.jLimagen.setSize(150,175);   
                verPaciente.setLocationRelativeTo(null);
                verPaciente.jLIDDentista.setText(jLIDDentista.getText());
                verPaciente.jLIDPaciente.setText(TxtIdPaciente.getText());
                verPaciente.setTitle("Información de: "+rs1.getObject(1).toString());
                try {
                    Statement s2 = cn.createStatement();
                    ResultSet rs2 = s2.executeQuery("SELECT fecha,Descripción FROM citas WHERE idPaciente = '"+TxtIdPaciente.getText()+"' AND actual='1'"); 
                    while(rs2.next()){
                        verPaciente.jLFecha.setText((String) rs2.getObject(1).toString());
                        verPaciente.jTMotivo.setText((String) rs2.getObject(2).toString());
                    }
                    rs2.close();
                }
                catch(SQLException e){
                    JOptionPane.showMessageDialog(null,"Problema al conectar");
                } 
                // COSTO 
                float cantidadPagada=0;
                float cantidadDebida=0;                
                DecimalFormat df = new DecimalFormat("0.00"); 
                try {
                    Statement s = cn.createStatement();
                    ResultSet rs = s.executeQuery("SELECT cantidadPagada FROM paciente WHERE idPaciente = '"+TxtIdPaciente.getText()+"'"); 
                    while(rs.next()){
                        cantidadPagada=Float.parseFloat((String) rs.getObject(1).toString());
                    }
                    rs.close();
                }
                catch(SQLException e){
                    JOptionPane.showMessageDialog(null,"Problema al conectar");
                }           
                try {
                    Statement s = cn.createStatement();
                    ResultSet rs = s.executeQuery("SELECT cantidad FROM costos WHERE idPaciente = '"+TxtIdPaciente.getText()+"'"); 
                    while(rs.next()){
                        cantidadDebida+=Float.parseFloat((String) rs.getObject(1).toString());
                    }
                    rs.close();
                }
                catch(SQLException e){
                    JOptionPane.showMessageDialog(null,"Problema al conectar");
                }    
                verPaciente.jLCantidad.setText("$"+df.format(cantidadDebida-cantidadPagada));
                //Aqui acaba costo
                verPaciente.setVisible(true);
                this.setVisible(false);
                i=true;
            }
            if(i==false){
                JOptionPane.showMessageDialog(null,"El paciente no existe o le corresponde a otro doctor");
            }
            rs1.close();
        }
            catch(SQLException e){
		JOptionPane.showMessageDialog(null,"Problema al conectar");
            } 
         
    }//GEN-LAST:event_jButton1ActionPerformed

    private void TablaPacientesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TablaPacientesMouseClicked
        // TODO add your handling code here:
        DefaultTableModel modelo = (DefaultTableModel)TablaPacientes.getModel();
        int fila = TablaPacientes.rowAtPoint(evt.getPoint());
         int columna = 0;
         if ((fila > -1) && (columna > -1))
            TxtIdPaciente.setText((String) modelo.getValueAt(fila,columna));
    }//GEN-LAST:event_TablaPacientesMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Pacientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Pacientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Pacientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Pacientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Pacientes().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Regresar;
    public javax.swing.JTable TablaPacientes;
    private javax.swing.JTextField TxtIdPaciente;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    public javax.swing.JLabel jLIDDentista;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    public javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
